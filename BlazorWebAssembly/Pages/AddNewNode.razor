@page "/addNewNodeDebug"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>New Article</h3>

<EditForm Model ="@node" OnValidSubmit="@HandleValidSubmit"> 
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <InputText id="Title" @bind-Value="node.title" class="form-control" placeholder="Title"/>
    <!--/div>
    <div class="form-group">
    <br /!-->
        <button type="submit" class="btn btn-success" @onclick="doNothing">Create</button>
    </div>
    <p hidden="@(!isFailed)">Something went wrong :(</p>
    <p hidden="@(!isSuccesful)">Article "@node.title" added succesfully</p>
</EditForm>

<style>
    .form-group {
        display: flex;
        margin: 3px;
    }
    .form-control {
        width: 90%;
    }
</style>





@code {
    private bool isFailed {get; set;} = false;
    private bool isSuccesful {get; set;} = false;
    private NodeCreateDTO node = new();

    private void doNothing() {
        Console.WriteLine("Node title: " + node.title);
        Console.WriteLine("isFailed = " + isFailed + ", isSuccesful = " + isSuccesful);
    }

    private async Task HandleValidSubmit() {
        Console.WriteLine("HandleValidSubmit() has been invoked.");
        var response = await Http.PostAsJsonAsync("api/Node", node);
        if (response.IsSuccessStatusCode) {
            Console.WriteLine("Succes!");
            isSuccesful = true;
            isFailed = false;

        } else {
            Console.WriteLine("Oh no it failed!");
            isFailed = true;
            isSuccesful = false;
        }
    } 
}