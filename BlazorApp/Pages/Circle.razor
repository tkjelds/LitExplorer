@page "/circle"
@page "/c"

<h3>Circle Size</h3>
<div class="circles">
    <input type="number" @bind="@radius" step="40" />
    <!--input type="string" @bind="@title" /!-->
    @for (int i = 0; i < strings.Count; i++)
    {
        var id = i;
        <div class="circle">
            <svg height="@(radius*2)" width="@(radius*2)">
                <!--circle cx="@radius" cy="@radius" r="@(radius*0.8)" stroke="black" stroke-width="@(radius *0.01)" fill="@color"!--/>
                <circle cx="@radius" cy="@radius" r="@(radius*0.8)" stroke="black" stroke-width="@(radius *0.01)" fill=@colors[id]/>
                <text x="50%" y="50%" text-anchor="middle" alignment-baseline="central" fill="#fff" font-size="@(radius*0.2)px">@strings[id]</text>
                <!--button class="bt" height="@(radius*2)" width="@(radius*2)" fill="red" @onclick="toGreen" /!-->
            </svg>   
            <button class="circleButton" @onclick="(() => newText(id))">@strings[id]</button !-->
        </div>

}
</div>

<style>
    .circleButton {
        border-radius: 400px;
        height: 200px;
        width: 200px;
        color: black;
        fill: blue;
        background-color: #2fb7d0;
    }

</style>

@code {
    int radius {get; set;} = 100;
    string color { get; set; } = "#2fb7d0";

    string title { get; set; } = "Untitled";

    List<string> strings = new List<string> {"no", "silver", "bullet"};

    List<string> colors = new List<string> {"red", "green", "blue"};

    private void newText(int id) {
        strings[id] = title;
    }
   
}

